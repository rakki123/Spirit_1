/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spirit;

import java.util.ArrayList;
import static spirit.Homepage.allPersonNames;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
/**
 *
 * @author Elcot
 */
public class SegmentStructure extends javax.swing.JFrame {

    /**
     * Creates new form SegmentStructure
     */
    public static ArrayList SegmentStruct=new ArrayList();
     public static ArrayList RITreee=new ArrayList();
    public SegmentStructure() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Segment Structure Generalization");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Segment Structure Generalization");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Rich Interactive Tree Construction");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Convolution Tree Kernel Classification");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)))
                .addGap(9, 9, 9)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList CandidSegments=Homepage.CS;
        
        try
        {
            edu.stanford.nlp.tagger.maxent.MaxentTagger ob=new edu.stanford.nlp.tagger.maxent.MaxentTagger(".\\models\\left3words-distsim-wsj-0-18.tagger");
            for(int i=0;i<CandidSegments.size();i++)
            {
                String c1=CandidSegments.get(i).toString().trim();
                System.out.println("Before: "+c1.trim());
                String rep=c1;
                for(int j=0;j<allPersonNames.size();j++)
                {
                    String pn=allPersonNames.get(j).toString().trim();
                    if(rep.contains(pn))
                    {
                        rep=rep.replaceAll(pn.trim(), j+"@");
                    }
                }
                System.out.println("After: "+rep.trim());
                
                String sp[]=rep.trim().split(" ");
                String ro="";
                for(int j=0;j<sp.length;j++)
                {
                    if(!(sp[j].trim().contains("@")))
                    {
                        if((!(sp[j].trim().equals("")))&&(!(sp[j].trim().equals(" "))))
                        {
                            String ret=ob.tagString(sp[j].trim());
                            ro=ro+ret.trim()+"#";
                        }
                    }
                    else
                    {
                        String repc=sp[j].trim().replaceAll("@", "");
                        int index=Integer.parseInt(repc.trim());
                        String pername=allPersonNames.get(index).toString().trim();
                        ro=ro+pername.trim()+"/NR#";
                    }
                }
                String row=ro.substring(0,ro.lastIndexOf("#"));
                SegmentStruct.add(row.trim());
                System.out.println("Struct: "+row.trim().replaceAll("#"," "));                
                jTextArea1.append(row.trim().replaceAll("#"," ")+"\n\n");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        ArrayList stop1=new ArrayList();
        try
        {
            File fe2=new File("stopwords1.txt");
            FileInputStream fis2=new FileInputStream(fe2);
            byte data2[]=new byte[fis2.available()];
            fis2.read(data2);
            fis2.close();

            String sg2[]=new String(data2).split("\n");

            for(int i=0;i<sg2.length;i++)
            stop1.add(sg2[i].trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

        ArrayList trainingcorpus=new ArrayList();
        try
        {
            File fe2=new File("TrainingCorpus.txt");
            FileInputStream fis2=new FileInputStream(fe2);
            byte data2[]=new byte[fis2.available()];
            fis2.read(data2);
            fis2.close();

            String sg2[]=new String(data2).split("\n");

            for(int i=0;i<sg2.length;i++)
            trainingcorpus.add(sg2[i].trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

        /* RIT Branching, Pruning */

        ArrayList aftBranchPrun=new ArrayList();

        for(int i=0;i<SegmentStruct.size();i++)
        {
            String ss=SegmentStruct.get(i).toString().trim();
            String sp[]=ss.trim().split("#");
            ArrayList norep=new ArrayList();
            String ro="";
            for(int j=0;j<sp.length;j++)
            {
                /* Middle clause & Stopwords & Duplicate Words removal */

                String spc[]=sp[j].trim().split("\\/");
                if((spc[1].trim().startsWith("N"))||(spc[1].trim().startsWith("V")))
                {
                    if(!(stop1.contains(spc[0].trim())))
                    {
                        if(!(norep.contains(spc[0].trim())))
                        {
                            ro=ro+sp[j].trim()+"#";
                            norep.add(spc[0].trim());
                        }
                    }
                }
            }
            String row=ro.substring(0,ro.lastIndexOf("#"));
            aftBranchPrun.add(row.trim());
            System.out.println(row.trim());
            //jTextArea1.append(row.trim().replaceAll("#"," ")+"\n\n");
        }

        System.out.println("##########################################################################");

        /* RIT Ornamenting */

        for(int i=0;i<aftBranchPrun.size();i++)
        {
            String ss=aftBranchPrun.get(i).toString().trim();
            System.out.println("ss: "+ss.trim());
            jTextArea2.append(ss.trim().replaceAll("#"," "));
            String sp[]=ss.trim().split("#");
            int minNR=0,maxNR=0,count=0;
            ArrayList vindex=new ArrayList();
            for(int j=0;j<sp.length;j++)
            {
                String spc[]=sp[j].trim().split("\\/");
                //System.out.println("spc[1]: "+spc[1].trim());
                if(spc[1].trim().contains("NR"))
                {
                    if(count==0)
                    {
                        //System.out.println("Her1");
                        minNR=j;
                        count=1;
                        continue;
                    }
                    if(count==1)
                    {
                        //System.out.println("Her2");
                        maxNR=j;
                        count=2;
                    }
                }
                if(spc[1].trim().startsWith("V"))
                {
                    vindex.add(j);
                }
                else
                {
                    if(spc[1].trim().contains("VB"))
                    {
                        vindex.add(j);
                    }
                }
            }

            System.out.println("minNR: "+minNR);
            System.out.println("maxNR: "+maxNR);
            System.out.println("vindex: "+vindex);

            // Check Intra-inner or not
            String classlabel="-";
            int inner=0,outer=0;
            for(int j=0;j<vindex.size();j++)
            {
                int ind=Integer.parseInt(vindex.get(j).toString().trim());
                if((ind>minNR)&&(ind<maxNR))
                {
                    inner++;
                }
                if((ind<minNR)||(ind>maxNR))
                {
                    outer++;
                }
            }
            System.out.println("inner: "+inner);
            System.out.println("outer: "+outer);
            System.out.println("vindex.size(): "+vindex.size());

            if(inner==vindex.size())
            {
                System.out.println("Here1");
                int minNRplusone=minNR+1;
                int maxNRminusone=maxNR-1;
                if((vindex.contains(minNRplusone))||(vindex.contains(maxNRminusone)))
                {
                    classlabel="Intra-inner";
                }
                else
                {
                    classlabel="Inter-inner";
                }
            }
            else if(outer==vindex.size())
            {
                System.out.println("Here2");
                int minNRminusone=minNR-1;
                int maxNRplusone=maxNR+1;
                if((vindex.contains(minNRminusone))||(vindex.contains(maxNRplusone)))
                {
                    classlabel="Inter-outer";
                }
                else
                {
                    classlabel="Intra-outer";
                }
            }
            else if((inner!=0)&&(outer!=0))
            {
                System.out.println("Here3");
                int minNRplusone=minNR+1;
                int maxNRplusone=maxNR+1;
                if((vindex.contains(minNRplusone))&&(vindex.contains(maxNRplusone)))
                {
                    if(vindex.size()>2)
                    {
                        classlabel="Inter-surrounding";
                    }
                    else
                    {
                        classlabel="Intra-surrounding";
                    }
                }
                else
                {
                    classlabel="Inter-surrounding";
                }
            }
            jTextArea2.append(" --> "+classlabel.trim()+"\n\n");
            RITreee.add(ss.trim()+"-->"+classlabel.trim());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ConvolutionTreeKernel ctk=new ConvolutionTreeKernel();
        ctk.setTitle("Convolution Tree Kernel Classification");
        ctk.setVisible(true);
        ctk.setResizable(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SegmentStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SegmentStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SegmentStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SegmentStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SegmentStructure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
